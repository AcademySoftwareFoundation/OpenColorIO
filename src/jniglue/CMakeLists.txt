
include_directories(
  ${JNI_INCLUDE_DIRS}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_SOURCE_DIR}/export/
  ${CMAKE_BINARY_DIR}/export/
)

set(JNIOCIO_CLASSES
  # Core
  org.OpenColourIO.ExceptionBase
  org.OpenColourIO.ExceptionMissingFile
  org.OpenColourIO.Globals
  org.OpenColourIO.Config
  org.OpenColourIO.ColourSpace
  org.OpenColourIO.Processor
  org.OpenColourIO.GpuShaderDesc
  org.OpenColourIO.Context
  org.OpenColourIO.Look
  org.OpenColourIO.ImageDesc
  org.OpenColourIO.Transform
  org.OpenColourIO.PackedImageDesc
  org.OpenColourIO.PlanarImageDesc
  org.OpenColourIO.Baker
  # Enums
  org.OpenColourIO.LoggingLevel
  org.OpenColourIO.ColourSpaceDirection
  org.OpenColourIO.TransformDirection
  org.OpenColourIO.Interpolation
  org.OpenColourIO.BitDepth
  org.OpenColourIO.Allocation
  org.OpenColourIO.GpuLanguage
  # Transforms
  org.OpenColourIO.AllocationTransform
  org.OpenColourIO.CDLTransform
  org.OpenColourIO.ColourSpaceTransform
  org.OpenColourIO.DisplayTransform
  org.OpenColourIO.ExponentTransform
  org.OpenColourIO.FileTransform
  org.OpenColourIO.GroupTransform
  org.OpenColourIO.LogTransform
  org.OpenColourIO.LookTransform
  org.OpenColourIO.MatrixTransform
  org.OpenColourIO.TruelightTransform
)

file(GLOB JNIOCIO_JAVAS "org/OpenColourIO/*.java")

message(STATUS "Creating Jar Manifest.txt")
configure_file(${CMAKE_SOURCE_DIR}/src/jniglue/Manifest.txt.in
    ${CMAKE_CURRENT_BINARY_DIR}/Manifest.txt @ONLY)

message(STATUS "Creating LoadLibrary.java")
configure_file(${CMAKE_SOURCE_DIR}/src/jniglue/LoadLibrary.java.in
    ${CMAKE_CURRENT_BINARY_DIR}/LoadLibrary.java @ONLY)
list(APPEND JNIOCIO_JAVAS ${CMAKE_CURRENT_BINARY_DIR}/LoadLibrary.java)

set(JNIOCIO_HEADERS)
set(JNIOCIO_H_INCLUDE "/* DO NOT EDIT THIS FILE - it is machine generated */\n\n")
foreach(_CLASS ${JNIOCIO_CLASSES})
  string(REPLACE "." "_" _CLASS_H ${_CLASS})
  set(_CLASS_H "${_CLASS_H}.h")
  set(JNIOCIO_HEADERS ${JNIOCIO_HEADERS} "${_CLASS_H}")
  set(JNIOCIO_H_INCLUDE "${JNIOCIO_H_INCLUDE}#include \"${_CLASS_H}\"\n")
endforeach()
message(STATUS "Creating OpenColourIOJNI.h that includes all the ocio jni headers")
file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/OpenColourIOJNI.h" "${JNIOCIO_H_INCLUDE}")

set(JNIOCIO_JAR "${CMAKE_CURRENT_BINARY_DIR}/OpenColourIO-${OCIO_VERSION}.jar")
add_custom_command(OUTPUT ${JNIOCIO_HEADERS}
                   COMMAND cmake -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/org/OpenColourIO
                   COMMAND ${Java_JAVAC_EXECUTABLE} -cp ${CMAKE_CURRENT_BINARY_DIR} -d ${CMAKE_CURRENT_BINARY_DIR} ${JNIOCIO_JAVAS}
                   COMMAND ${Java_JAVAH_EXECUTABLE} -jni -force ${JNIOCIO_CLASSES}
                   COMMAND ${Java_JAR_EXECUTABLE} vcfm ${JNIOCIO_JAR} Manifest.txt org
                   IMPLICIT_DEPENDS ${JNIOCIO_JAVAS}
                   COMMENT "Compiling .java files, packaged .jar and creating jni C headers")

file(GLOB JNIOCIO_SRC "*.cpp")
add_library(OpenColourIO-JNI SHARED ${JNIOCIO_SRC} ${JNIOCIO_HEADERS})
set_target_properties(OpenColourIO-JNI PROPERTIES
                      VERSION ${OCIO_VERSION}
                      SOVERSION ${SOVERSION})
if(OCIO_STATIC_JNIGLUE)
  target_link_libraries(OpenColourIO-JNI OpenColourIO_STATIC)
else()
  target_link_libraries(OpenColourIO-JNI OpenColourIO)
endif()

add_subdirectory(tests)

install(TARGETS OpenColourIO-JNI DESTINATION ${CMAKE_INSTALL_EXEC_PREFIX}/lib${LIB_SUFFIX})
install(FILES ${JNIOCIO_JAR} DESTINATION ${CMAKE_INSTALL_PREFIX}/share/ocio/)
