Python: DisplayTransform
========================
.. code-block:: python

    import PyOpenColorIO as OCIO
    
    transform = OCIO.DisplayTransform()


.. py:class:: DisplayTransform
        
Used to create transforms for displays.             
        

.. py:method:: DisplayTransform.getInputColorSpaceName()
                     
   Returns the name of the input ColorSpace of :py:class:`DisplayTransform`.
   :return: name of input ColorSpace
   :rtype: string
        

.. py:method:: DisplayTransform.setInputColorSpaceName(name)
                     
   Sets the name of the input ColorSpace of :py:class:`DisplayTransform`.
   :param name: name of input ColorSpace
   :type name: string
        

.. py:method:: DisplayTransform.getLinearCC()
                     
   Returns the linear CC transform of :py:class:`DisplayTransform`.
   :return: linear CC transform
   :rtype: object
        

.. py:method:: DisplayTransform.setLinearCC(pyCC)
                     
   Sets the linear CC transform of :py:class:`DisplayTransform`.
   :param pyCC: linear CC
   :type pyCC: object
        

.. py:method:: DisplayTransform.getColorTimingCC()
                     
   Returns the color timing CC transform of :py:class:`DisplayTransform`.
   :return: color timing CC transform
   :rtype: object
        

.. py:method:: DisplayTransform.setColorTimingCC(pyCC)
                     
   Sets the color timing CC transform of :py:class:`DisplayTransform`.
   :param pyCC: color timing CC
   :type pyCC: object
        

.. py:method:: DisplayTransform.getChannelView()
                     
   Returns the channel view of :py:class:`DisplayTransform`.
   :return: channel view
   :rtype: object
        

.. py:method:: DisplayTransform.setChannelView(pyCC)
                     
   Sets the channel view transform of :py:class:`DisplayTransform`.
   :param pyCC: channel view transform
   :type pyCC: object
        

.. py:method:: DisplayTransform.getDisplay()
                     
   Returns the display of :py:class:`DisplayTransform`.
   :return: display
   :rtype: string
        

.. py:method:: DisplayTransform.setChannelView(str)
                     
   Sets the display of :py:class:`DisplayTransform`.
   :param str: display
   :type str: string
        

.. py:method:: DisplayTransform.getView()
                     
   Returns the view of :py:class:`DisplayTransform`.
   :return: view
   :rtype: string
        

.. py:method:: DisplayTransform.setView(str)
                     
   Sets the view of :py:class:`DisplayTransform`.
   :param str: view
   :type str: string
        

.. py:method:: DisplayTransform.getDisplayCC()
                     
   Returns the display CC transform of :py:class:`DisplayTransform`.
   :return: display CC
   :rtype: object
        

.. py:method:: DisplayTransform.setDisplayCC(pyCC)
                     
   Sets the display CC transform of :py:class:`DisplayTransform`.
   :param pyCC: display CC
   :type pyCC: object
        

.. py:method:: DisplayTransform.getLooksOverride()
                     
   Returns the looks in :py:class:`DisplayTransform` that's overriding :py:class:`Config`'s.
   :return: looks override
   :rtype: string
        

.. py:method:: DisplayTransform.setLooksOverride(str)
                     
   Sets the looks override of :py:class:`DisplayTransform`.
   :param str: looks override
   :type str: string
        

.. py:method:: DisplayTransform.getLooksOverrideEnabled()
                     
   Returns whether the looks override of :py:class:`DisplayTransform` is enabled.
   :return: looks override enabling
   :rtype: bool
        

.. py:method:: DisplayTransform.setLooksOverrideEnabled(enabled)
                     
   Sets the looks override enabling of :py:class:`DisplayTransform`.
   :param enabled: looks override enabling
   :type enabled: object
        

