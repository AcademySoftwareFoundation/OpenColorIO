Python: CDLTransform
====================

Examples of Use
^^^^^^^^^^^^^^^
.. code-block:: python

    import PyOpenColorIO as OCIO
    
    cdl = OCIO.CDLTransform()
    
    # Set the slope, offset, power, and saturation for each channel.
    cdl.setSOP([, , , , , , , , ])
    cdl.setSat([, , ])
    
    cdl.getSatLumaCoefs()


.. py:class::CDLTransform()
    
Description
^^^^^^^^^^^
   Used to define a transform based on a color decision list (CDL), 
   based on the 9 numbers defined in SOP (slope, offset, and power)
   and Sat (saturation). Each element in SOP and Sat are characterized 
   by three floats (for RGB).
    

.. py:method:: Config.setSlope(pyData)
                     
   Sets the slope ('S' part of SOP) in :py:class:`CDLTransform`.

   :param pyData: 
   :type pyData: object
        

.. py:method:: Config.setOffset(pyData)
                     
   Sets the offset ('O' part of SOP) in :py:class:`CDLTransform`.

   :param pyData: list of three floats
   :type pyData: object
        

.. py:method:: Config.setPower(pyData)
                     
   Sets the power ('P' part of SOP) in :py:class:`CDLTransform`.

   :param pyData: list of three floats
   :type pyData: object
        

.. py:method:: Config.setSOP(pyData)
                     
   Sets SOP in :py:class:`CDLTransform`.

   :param pyData: list of nine floats
   :type pyData: object
        

.. py:method:: Config.setSAT(pyData)
                     
   Sets SAT (saturation) in :py:class:`CDLTransform`.

   :param pyData: saturation
   :type pyData: float
        

.. py:method:: Config.getSatLumaCoefs(pyData)
                     
   Returns the SAT (saturation) and luma coefficients in :py:class:`CDLTransform`.

   :return: saturation and luma coefficients
   :rtype: list of floats
        

.. py:method:: Config.getID()
                     
   Returns the ID from :py:class:`CDLTransform`.

   :return: ID
   :rtype: string
        

.. py:method:: Config.setID(str)
                     
   Sets the ID in :py:class:`CDLTransform`.

   :param str: ID
   :type str: string
        

.. py:method:: Config.getDescription()
                     
   Returns the description of :py:class:`CDLTransform`.

   :return: description
   :rtype: string
        

.. py:method:: Config.setDescription(str)
                     
   Sets the description of :py:class:`CDLTransform`.

   :param str: description
   :type str: string
        

