# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

# travis-ci.org build file
# https://docs.travis-ci.com/user/languages/cpp

matrix:
  include:
    # Linux jobs
    - name: linux_clang
      if: type != cron OR branch != master
      os: linux
      language: cpp
      compiler: clang

    - name: linux_clang_sonar
      if: type = cron AND branch = master
      os: linux
      dist: trusty
      language: cpp
      compiler: clang
      addons:
        sonarcloud:
          organization: imageworks
          token: $SONAR_TOKEN

    - name: linux_gcc
      os: linux
      language: cpp
      compiler: gcc

    - name: linux_gcc_sse_off
      os: linux
      language: cpp
      compiler: gcc
      env:
        - OPTIONS_BUILD="-DOCIO_USE_SSE=OFF"

    # OSX jobs
    - name: osx_clang
      os: osx
      language: cpp
      compiler: clang
      osx_image: xcode9.1
      env:
        - MATRIX_EVAL=""

    - name: osx_gcc
      os: osx
      language: cpp
      # Note: On macOS, compiler "gcc" is an alias for "clang". This is how to
      # actually build with GCC:
      #   https://docs.travis-ci.com/user/languages/cpp#gcc-on-macos
      osx_image: xcode9.1
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

env:
  global:
    - OPTIONS="-DCMAKE_BUILD_TYPE=Release -DOCIO_BUILD_TESTS=ON -DOCIO_BUILD_GPU_TESTS=OFF -DOCIO_BUILD_DOCS=ON -DOCIO_WARNING_AS_ERROR=ON"

# Install missing packages
before_install:
  # Linux ones
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update -qq;
      sudo apt-get install -y -qq freeglut3-dev libglew-dev libxmu-dev libxi-dev;
      mkdir ${TRAVIS_BUILD_DIR}/_cmake;
      wget https://cmake.org/files/v3.12/cmake-3.12.2-Linux-x86_64.sh;
      sh cmake-3.12.2-Linux-x86_64.sh -- --skip-license --prefix=${TRAVIS_BUILD_DIR}/_cmake;
      export PATH="${TRAVIS_BUILD_DIR}/_cmake/bin:$PATH";
    fi
  # OSX ones
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install glew;
      brew upgrade cmake;
      brew upgrade pyenv;
      echo 'eval "$(pyenv init -)"' >> .bash_profile;
      source .bash_profile;
      export PYTHON_CONFIGURE_OPTS="--enable-framework";
      pyenv install -v 2.7.15;
      pyenv global 2.7.15;
      export OPTIONS="$OPTIONS -DPYTHON_LIBRARY=$(python-config --prefix)/lib/libpython2.7.dylib";
      export OPTIONS="$OPTIONS -DPYTHON_INCLUDE_DIR=$(python-config --prefix)/include/python2.7";
      export OPTIONS="$OPTIONS -DPYTHON_EXECUTABLE=$(which python2)";
      eval "${MATRIX_EVAL}";
    fi

# Run the Build script
script:
  - mkdir _build
  - cd _build
  - cmake .. -DCMAKE_INSTALL_PREFIX=../_install $OPTIONS $OPTIONS_BUILD
  - if [[ "$TRAVIS_JOB_NAME" == linux_*_sonar ]];
    then
      build-wrapper-linux-x86-64 --out-dir bw-output cmake --build . --target install;
    else
      cmake --build . --target install;
    fi
  - ctest -V
  - if [[ "$TRAVIS_JOB_NAME" == *_sonar ]]; then
      sonar-scanner;
    fi

cache:
  directories:
    - '$HOME/.sonar/cache'

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  on:
    tags: true
  local_dir: ./docs/build-html
  fqdn: opencolorio.org
