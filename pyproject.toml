[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "cmake>=3.14",
    "ninja; sys_platform != 'win32' and platform_machine != 'arm64'",
    # Documentation requirements (see docs/requirements.txt for details)
    "urllib3<2",
    "docutils>=0.18.1",
    "sphinx<=7.1.2",
    "six",
    "testresources",
    "recommonmark",
    "sphinx-press-theme",
    "sphinx-tabs",
    "breathe"
]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build-verbosity = "1"

test-requires = ["numpy"]
test-command = [
    "python {project}/tests/python/OpenColorIOTestSuite.py",
    "ociocheck"
]

[tool.cibuildwheel.linux]
before-build = "share/ci/scripts/linux/dnf/install_docs_env.sh"

[tool.cibuildwheel.macos]
# cibuildwheel in some cases set this to 10.9 by default, OCIO needs >= 10.15
# macOS ARM wheels needs 11.0, cibuildwheel will automatically bump where appropriate
environment = { MACOSX_DEPLOYMENT_TARGET="10.15" }
before-build = "share/ci/scripts/macos/install_docs_env.sh"

[tool.cibuildwheel.windows]
environment = { PATH="$GITHUB_WORKSPACE/doxygen;$PATH" }
before-build = 'bash -c "share/ci/scripts/windows/install_docs_env.sh $GITHUB_WORKSPACE/doxygen"'

[[tool.cibuildwheel.overrides]]
# Trigger the build & validation of the python stubs for certain platforms.
# The test command acts as a kind of "post-build" callback where it's possible
# for the stub-generator to import the freshly-built wheel.
# There are two entry-points which are designed to call generate_stubs.py through
# this test command:
# - `cmake /path/to/source; cmake --build . --target pystubs` is called during
#   local development to generate the stubs and copy them into the git repo to
#   be committed and reviewed.
# - in CI, the cibuildwheel action is used to validate that the stubs match what
#   has been committed to the repo.
test-requires = "mypy~=1.15.0 stubgenlib~=0.2.0"
# Note: the python version here must be kept in sync with src/bindings/python/CMakeLists.txt
select = "cp311-manylinux_*64"
inherit.test-command = "append"
test-command = [
    "python {project}/src/bindings/python/stubs/generate_stubs.py --out-path '/output' --validate-path '{project}/src/bindings/python/stubs/PyOpenColorIO/__init__.pyi'",
]

[tool.mypy]
files = [
    "tests/python/",
    "src/bindings/python/stubs",
]
allow_redefinition = true
check_untyped_defs = true
disable_error_code = [
    "func-returns-value",
]