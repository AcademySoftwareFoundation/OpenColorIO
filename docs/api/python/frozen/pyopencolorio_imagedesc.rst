..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: ImageDesc
   :module: PyOpenColorIO

   This is a light-weight wrapper around an image, that provides a context for pixel access. This does NOT claim ownership of the pixels or copy image data.


   .. py:method:: ImageDesc.__init__(self: PyOpenColorIO.ImageDesc) -> None
      :module: PyOpenColorIO


   .. py:method:: ImageDesc.getBitDepth(self: PyOpenColorIO.ImageDesc) -> PyOpenColorIO.BitDepth
      :module: PyOpenColorIO

      Get the bit-depth.


   .. py:method:: ImageDesc.getHeight(self: PyOpenColorIO.ImageDesc) -> int
      :module: PyOpenColorIO

      Get the height to process (where y position starts at 0 and ends at height-1).


   .. py:method:: ImageDesc.getWidth(self: PyOpenColorIO.ImageDesc) -> int
      :module: PyOpenColorIO

      Get the width to process (where x position starts at 0 and ends at width-1).


   .. py:method:: ImageDesc.getXStrideBytes(self: PyOpenColorIO.ImageDesc) -> int
      :module: PyOpenColorIO

      Get the step in bytes to find the same color channel of the next pixel.


   .. py:method:: ImageDesc.getYStrideBytes(self: PyOpenColorIO.ImageDesc) -> int
      :module: PyOpenColorIO

      Get the step in bytes to find the same color channel of the pixel at the same position in the next line.


   .. py:method:: ImageDesc.isFloat(self: PyOpenColorIO.ImageDesc) -> bool
      :module: PyOpenColorIO

      Is the image buffer 32-bit float?


   .. py:method:: ImageDesc.isRGBAPacked(self: PyOpenColorIO.ImageDesc) -> bool
      :module: PyOpenColorIO

      Is the image buffer in packed mode with the 4 color channels? ("Packed" here means that XStrideBytes is 4x the bytes per channel, so it is more specific than simply any :ref:`PackedImageDesc`.)

