..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: GroupTransform
   :module: PyOpenColorIO


   .. py:method:: GroupTransform.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. __init__(self: PyOpenColorIO.GroupTransform) -> None

      2. __init__(self: PyOpenColorIO.GroupTransform, transforms: List[PyOpenColorIO.Transform] = [], direction: PyOpenColorIO.TransformDirection = TransformDirection.TRANSFORM_DIR_FORWARD) -> None


   .. py:method:: GroupTransform.__str__(self: PyOpenColorIO.GroupTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: GroupTransform.appendTransform(self: PyOpenColorIO.GroupTransform, transform: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Adds a transform to the end of the group.


   .. py:method:: GroupTransform.getDirection(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformDirection
      :module: PyOpenColorIO


   .. py:method:: GroupTransform.getFormatMetadata(self: PyOpenColorIO.GroupTransform) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO


   .. py:method:: GroupTransform.getTransformType(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformType
      :module: PyOpenColorIO


   .. py:method:: GroupTransform.prependTransform(self: PyOpenColorIO.GroupTransform, transform: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Add a transform at the beginning of the group.


   .. py:method:: GroupTransform.setDirection(self: PyOpenColorIO.Transform, direction: PyOpenColorIO.TransformDirection) -> None
      :module: PyOpenColorIO

      Note that this only affects the evaluation and not the values stored in the object.


   .. py:method:: GroupTransform.validate(self: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Will throw if data is not valid.


.. py:class:: TransformIterator
   :module: PyOpenColorIO.GroupTransform


   .. py:method:: TransformIterator.__getitem__(self: PyOpenColorIO.GroupTransform.TransformIterator, arg0: int) -> PyOpenColorIO.Transform
      :module: PyOpenColorIO.GroupTransform


   .. py:method:: TransformIterator.__iter__(self: PyOpenColorIO.GroupTransform.TransformIterator) -> PyOpenColorIO.GroupTransform.TransformIterator
      :module: PyOpenColorIO.GroupTransform


   .. py:method:: TransformIterator.__len__(self: PyOpenColorIO.GroupTransform.TransformIterator) -> int
      :module: PyOpenColorIO.GroupTransform


   .. py:method:: TransformIterator.__next__(self: PyOpenColorIO.GroupTransform.TransformIterator) -> PyOpenColorIO.Transform
      :module: PyOpenColorIO.GroupTransform

