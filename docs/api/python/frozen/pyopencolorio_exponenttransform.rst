..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: ExponentTransform
   :module: PyOpenColorIO

   Represents exponent transform: pow( clamp(color), value ).

   .. note::
      For configs with version == 1: Negative style is ignored and if the exponent is 1.0, this will not clamp. Otherwise, the input color will be clamped between [0.0, inf]. For configs with version > 1: Negative value handling may be specified via setNegativeStyle.


   .. py:method:: ExponentTransform.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. __init__(self: PyOpenColorIO.ExponentTransform) -> None

      2. __init__(self: PyOpenColorIO.ExponentTransform, value: List[float[4]] = [1.0, 1.0, 1.0, 1.0], negativeStyle: PyOpenColorIO.NegativeStyle = <NegativeStyle.NEGATIVE_CLAMP: 0>, direction: PyOpenColorIO.TransformDirection = <TransformDirection.TRANSFORM_DIR_FORWARD: 0>) -> None


   .. py:method:: ExponentTransform.equals(self: PyOpenColorIO.ExponentTransform, other: PyOpenColorIO.ExponentTransform) -> bool
      :module: PyOpenColorIO

      Checks if this exactly equals other.


   .. py:method:: ExponentTransform.getDirection(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformDirection
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.getFormatMetadata(self: PyOpenColorIO.ExponentTransform) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.getNegativeStyle(self: PyOpenColorIO.ExponentTransform) -> PyOpenColorIO.NegativeStyle
      :module: PyOpenColorIO

      Specifies how negative values are handled. Legal values:

      - NEGATIVE_CLAMP -- Clamp negative values (default).
      - NEGATIVE_MIRROR -- Positive curve is rotated 180 degrees around the origin to handle negatives.
      - NEGATIVE_PASS_THRU -- Negative values are passed through unchanged.


   .. py:method:: ExponentTransform.getTransformType(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformType
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.getValue(self: PyOpenColorIO.ExponentTransform) -> List[float[4]]
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.setDirection(self: PyOpenColorIO.Transform, direction: PyOpenColorIO.TransformDirection) -> None
      :module: PyOpenColorIO

      Note that this only affects the evaluation and not the values stored in the object.


   .. py:method:: ExponentTransform.setNegativeStyle(self: PyOpenColorIO.ExponentTransform, style: PyOpenColorIO.NegativeStyle) -> None
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.setValue(self: PyOpenColorIO.ExponentTransform, value: List[float[4]]) -> None
      :module: PyOpenColorIO


   .. py:method:: ExponentTransform.validate(self: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Will throw if data is not valid.

