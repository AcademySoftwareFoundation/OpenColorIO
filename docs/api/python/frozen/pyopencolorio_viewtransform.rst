..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: ViewTransform
   :module: PyOpenColorIO

   A *:ref:`ViewTransform`* provides a conversion from the main (usually scene-referred) reference space to the display-referred reference space. This allows splitting the conversion from the main reference space to a display into two parts: the :ref:`ViewTransform` plus a display color space.

   It is also possible to provide a :ref:`ViewTransform` that converts from the display-referred reference space back to that space. This is useful in cases when a :ref:`ViewTransform` is needed when converting between displays (such as HDR to SDR).

   The ReferenceSpaceType indicates whether the :ref:`ViewTransform` converts from scene-to-display reference or display-to-display reference.

   The from_reference transform direction is the one that is used when going out towards a display.


   .. py:method:: ViewTransform.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. __init__(self: PyOpenColorIO.ViewTransform, referenceSpace: PyOpenColorIO.ReferenceSpaceType) -> None

      2. __init__(self: PyOpenColorIO.ViewTransform, referenceSpace: PyOpenColorIO.ReferenceSpaceType = <ReferenceSpaceType.REFERENCE_SPACE_SCENE: 0>, name: str = '', family: str = '', description: str = '', toReference: PyOpenColorIO.Transform = None, fromReference: PyOpenColorIO.Transform = None, categories: List[str] = []) -> None


   .. py:method:: ViewTransform.addCategory(self: PyOpenColorIO.ViewTransform, category: str) -> None
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::addCategory`


   .. py:method:: ViewTransform.clearCategories(self: PyOpenColorIO.ViewTransform) -> None
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::clearCategories`


   .. py:method:: ViewTransform.getCategories(self: PyOpenColorIO.ViewTransform) -> PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.getDescription(self: PyOpenColorIO.ViewTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.getFamily(self: PyOpenColorIO.ViewTransform) -> str
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::getFamily`


   .. py:method:: ViewTransform.getName(self: PyOpenColorIO.ViewTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.getReferenceSpaceType(self: PyOpenColorIO.ViewTransform) -> PyOpenColorIO.ReferenceSpaceType
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.getTransform(self: PyOpenColorIO.ViewTransform, direction: PyOpenColorIO.ViewTransformDirection) -> PyOpenColorIO.Transform
      :module: PyOpenColorIO

      If a transform in the specified direction has been specified, return it. Otherwise return a null ConstTransformRcPtr


   .. py:method:: ViewTransform.hasCategory(self: PyOpenColorIO.ViewTransform, category: str) -> bool
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::hasCategory`


   .. py:method:: ViewTransform.removeCategory(self: PyOpenColorIO.ViewTransform, category: str) -> None
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::removeCategory`


   .. py:method:: ViewTransform.setDescription(self: PyOpenColorIO.ViewTransform, description: str) -> None
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.setFamily(self: PyOpenColorIO.ViewTransform, family: str) -> None
      :module: PyOpenColorIO

      .. see::
         :ref:`ColorSpace::setFamily`


   .. py:method:: ViewTransform.setName(self: PyOpenColorIO.ViewTransform, name: str) -> None
      :module: PyOpenColorIO


   .. py:method:: ViewTransform.setTransform(self: PyOpenColorIO.ViewTransform, transform: PyOpenColorIO.Transform, direction: PyOpenColorIO.ViewTransformDirection) -> None
      :module: PyOpenColorIO

      Specify the transform for the appropriate direction. Setting the transform to null will clear it.


.. py:class:: ViewTransformCategoryIterator
   :module: PyOpenColorIO.ViewTransform


   .. py:method:: ViewTransformCategoryIterator.__getitem__(self: PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator, arg0: int) -> str
      :module: PyOpenColorIO.ViewTransform


   .. py:method:: ViewTransformCategoryIterator.__iter__(self: PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator) -> PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator
      :module: PyOpenColorIO.ViewTransform


   .. py:method:: ViewTransformCategoryIterator.__len__(self: PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator) -> int
      :module: PyOpenColorIO.ViewTransform


   .. py:method:: ViewTransformCategoryIterator.__next__(self: PyOpenColorIO.ViewTransform.ViewTransformCategoryIterator) -> str
      :module: PyOpenColorIO.ViewTransform

