..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: LogCameraTransform
   :module: PyOpenColorIO

   Same as :ref:`LogAffineTransform` but with the addition of a linear segment near black. This formula is used for many camera logs (e.g., LogC) as well as ACEScct.

   - The linSideBreak specifies the point on the linear axis where the log and linear segments meet. It must be set (there is no default).

   - The linearSlope specifies the slope of the linear segment of the forward (linToLog) transform. By default it is set equal to the slope of the log curve at the break point.


   .. py:method:: LogCameraTransform.__init__(self: PyOpenColorIO.LogCameraTransform, linSideBreak: List[float[3]], base: float = 2.0, logSideSlope: List[float[3]] = [1.0, 1.0, 1.0], logSideOffset: List[float[3]] = [0.0, 0.0, 0.0], linSideSlope: List[float[3]] = [1.0, 1.0, 1.0], linSideOffset: List[float[3]] = [0.0, 0.0, 0.0], linearSlope: List[float] = [], direction: PyOpenColorIO.TransformDirection = <TransformDirection.TRANSFORM_DIR_FORWARD: 0>) -> None
      :module: PyOpenColorIO

      LinSideBreak must be set for the transform to be valid (there is no default).


   .. py:method:: LogCameraTransform.equals(self: PyOpenColorIO.LogCameraTransform, other: PyOpenColorIO.LogCameraTransform) -> bool
      :module: PyOpenColorIO

      Checks if this exactly equals other.


   .. py:method:: LogCameraTransform.getBase(self: PyOpenColorIO.LogCameraTransform) -> float
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getDirection(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformDirection
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getFormatMetadata(self: PyOpenColorIO.LogCameraTransform) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getLinSideBreakValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getLinSideOffsetValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getLinSideSlopeValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getLinearSlopeValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO

      Return LinearSlope or 3 qnan values if not defined.


   .. py:method:: LogCameraTransform.getLogSideOffsetValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.getLogSideSlopeValue(self: PyOpenColorIO.LogCameraTransform) -> List[float[3]]
      :module: PyOpenColorIO

      Get/Set values for the R, G, B components.


   .. py:method:: LogCameraTransform.getTransformType(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformType
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.isLinearSlopeValueSet(self: PyOpenColorIO.LogCameraTransform) -> bool
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setBase(self: PyOpenColorIO.LogCameraTransform, base: float) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setDirection(self: PyOpenColorIO.Transform, direction: PyOpenColorIO.TransformDirection) -> None
      :module: PyOpenColorIO

      Note that this only affects the evaluation and not the values stored in the object.


   .. py:method:: LogCameraTransform.setLinSideBreakValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setLinSideOffsetValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setLinSideSlopeValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setLinearSlopeValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO

      Set LinearSlope value.

      .. note::
         You must call setLinSideBreakValue before calling this.


   .. py:method:: LogCameraTransform.setLogSideOffsetValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.setLogSideSlopeValue(self: PyOpenColorIO.LogCameraTransform, values: List[float[3]]) -> None
      :module: PyOpenColorIO


   .. py:method:: LogCameraTransform.unsetLinearSlopeValue(self: PyOpenColorIO.LogCameraTransform) -> None
      :module: PyOpenColorIO

      Remove LinearSlope values so that default values are used.


   .. py:method:: LogCameraTransform.validate(self: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Will throw if data is not valid.

