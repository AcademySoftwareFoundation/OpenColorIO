..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: MixingColorSpaceManager
   :module: PyOpenColorIO
   :canonical: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager

   Used to mix (or pick/choose) colors.


   .. py:method:: MixingColorSpaceManager.__init__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, config: PyOpenColorIO.PyOpenColorIO.Config) -> None
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getMixingEncodings(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getMixingSpaces(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getProcessor(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, workingSpaceName: str, displayName: str, viewName: str, direction: PyOpenColorIO.PyOpenColorIO.TransformDirection = <TransformDirection.TRANSFORM_DIR_FORWARD: 0>) -> PyOpenColorIO.PyOpenColorIO.Processor
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getSelectedMixingEncodingIdx(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> int
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getSelectedMixingSpaceIdx(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> int
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.getSlider(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. getSlider(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> PyOpenColorIO.PyOpenColorIO.MixingSlider

      2. getSlider(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, sliderMixingMinEdge: float, sliderMixingMaxEdge: float) -> PyOpenColorIO.PyOpenColorIO.MixingSlider


   .. py:method:: MixingColorSpaceManager.isPerceptuallyUniform(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager) -> bool
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.refresh(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, config: PyOpenColorIO.PyOpenColorIO.Config) -> None
      :module: PyOpenColorIO

      Refresh the instance (i.e. needed following a configuration change for example).


   .. py:method:: MixingColorSpaceManager.setSelectedMixingEncoding(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, mixingEncoding: str) -> None
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.setSelectedMixingEncodingIdx(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, arg0: int) -> None
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.setSelectedMixingSpace(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, mixingSpace: str) -> None
      :module: PyOpenColorIO


   .. py:method:: MixingColorSpaceManager.setSelectedMixingSpaceIdx(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager, arg0: int) -> None
      :module: PyOpenColorIO


.. py:class:: MixingSpaceIterator
   :module: PyOpenColorIO.MixingColorSpaceManager
   :canonical: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator


   .. py:method:: MixingSpaceIterator.__getitem__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator, arg0: int) -> str
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingSpaceIterator.__iter__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator) -> PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingSpaceIterator.__len__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator) -> int
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingSpaceIterator.__next__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator) -> str
      :module: PyOpenColorIO.MixingColorSpaceManager


.. py:class:: MixingEncodingIterator
   :module: PyOpenColorIO.MixingColorSpaceManager
   :canonical: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator


   .. py:method:: MixingEncodingIterator.__getitem__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator, arg0: int) -> str
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingEncodingIterator.__iter__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator) -> PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingEncodingIterator.__len__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingEncodingIterator) -> int
      :module: PyOpenColorIO.MixingColorSpaceManager


   .. py:method:: MixingEncodingIterator.__next__(self: PyOpenColorIO.PyOpenColorIO.MixingColorSpaceManager.MixingSpaceIterator) -> str
      :module: PyOpenColorIO.MixingColorSpaceManager

