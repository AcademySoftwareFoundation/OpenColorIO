..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: FormatMetadata
   :module: PyOpenColorIO

   The :ref:`FormatMetadata` class is intended to be a generic container to hold metadata from various file formats.

   This class provides a hierarchical metadata container. A metadata object is similar to an element in XML. It contains:

   - A name string (e.g. "Description").
   - A value string (e.g. "updated viewing LUT").
   - A list of attributes (name, value) string pairs (e.g. "version", "1.5").
   - And a list of child sub-elements, which are also objects implementing :ref:`FormatMetadata`.


   .. py:method:: FormatMetadata.__contains__(self: PyOpenColorIO.FormatMetadata, name: str) -> bool
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.__getitem__(self: PyOpenColorIO.FormatMetadata, name: str) -> str
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Initialize self.  See help(type(self)) for accurate signature.


   .. py:method:: FormatMetadata.__iter__(self: PyOpenColorIO.FormatMetadata) -> PyOpenColorIO.FormatMetadata.AttributeNameIterator
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.__len__(self: PyOpenColorIO.FormatMetadata) -> int
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.__setitem__(self: PyOpenColorIO.FormatMetadata, name: str, value: str) -> None
      :module: PyOpenColorIO

      Add an attribute with a given name and value. If an attribute with the same name already exists, the value is replaced.


   .. py:method:: FormatMetadata.addChildElement(self: PyOpenColorIO.FormatMetadata, name: str, value: str) -> None
      :module: PyOpenColorIO

      Add a child element after the last child with a given name and value. Name has to be non-empty. Value may be empty, particularly if this element will have children. Use getChildElement(getNumChildrenElements()-1) to access the added element.


   .. py:method:: FormatMetadata.clear(self: PyOpenColorIO.FormatMetadata) -> None
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.getAttributes(self: PyOpenColorIO.FormatMetadata) -> PyOpenColorIO.FormatMetadata.AttributeIterator
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.getChildElements(self: PyOpenColorIO.FormatMetadata) -> PyOpenColorIO.FormatMetadata.ChildElementIterator
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.getName(self: PyOpenColorIO.FormatMetadata) -> str
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.getValue(self: PyOpenColorIO.FormatMetadata) -> str
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.setName(self: PyOpenColorIO.FormatMetadata, name: str) -> None
      :module: PyOpenColorIO


   .. py:method:: FormatMetadata.setValue(self: PyOpenColorIO.FormatMetadata, value: str) -> None
      :module: PyOpenColorIO


.. py:class:: AttributeNameIterator
   :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeNameIterator.__getitem__(self: PyOpenColorIO.FormatMetadata.AttributeNameIterator, arg0: int) -> str
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeNameIterator.__iter__(self: PyOpenColorIO.FormatMetadata.AttributeNameIterator) -> PyOpenColorIO.FormatMetadata.AttributeNameIterator
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeNameIterator.__len__(self: PyOpenColorIO.FormatMetadata.AttributeNameIterator) -> int
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeNameIterator.__next__(self: PyOpenColorIO.FormatMetadata.AttributeNameIterator) -> str
      :module: PyOpenColorIO.FormatMetadata


.. py:class:: AttributeIterator
   :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeIterator.__getitem__(self: PyOpenColorIO.FormatMetadata.AttributeIterator, arg0: int) -> tuple
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeIterator.__iter__(self: PyOpenColorIO.FormatMetadata.AttributeIterator) -> PyOpenColorIO.FormatMetadata.AttributeIterator
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeIterator.__len__(self: PyOpenColorIO.FormatMetadata.AttributeIterator) -> int
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: AttributeIterator.__next__(self: PyOpenColorIO.FormatMetadata.AttributeIterator) -> tuple
      :module: PyOpenColorIO.FormatMetadata


.. py:class:: ConstChildElementIterator
   :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ConstChildElementIterator.__getitem__(self: PyOpenColorIO.FormatMetadata.ConstChildElementIterator, arg0: int) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ConstChildElementIterator.__iter__(self: PyOpenColorIO.FormatMetadata.ConstChildElementIterator) -> PyOpenColorIO.FormatMetadata.ConstChildElementIterator
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ConstChildElementIterator.__len__(self: PyOpenColorIO.FormatMetadata.ConstChildElementIterator) -> int
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ConstChildElementIterator.__next__(self: PyOpenColorIO.FormatMetadata.ConstChildElementIterator) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO.FormatMetadata


.. py:class:: ChildElementIterator
   :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ChildElementIterator.__getitem__(self: PyOpenColorIO.FormatMetadata.ChildElementIterator, arg0: int) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ChildElementIterator.__iter__(self: PyOpenColorIO.FormatMetadata.ChildElementIterator) -> PyOpenColorIO.FormatMetadata.ChildElementIterator
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ChildElementIterator.__len__(self: PyOpenColorIO.FormatMetadata.ChildElementIterator) -> int
      :module: PyOpenColorIO.FormatMetadata


   .. py:method:: ChildElementIterator.__next__(self: PyOpenColorIO.FormatMetadata.ChildElementIterator) -> PyOpenColorIO.FormatMetadata
      :module: PyOpenColorIO.FormatMetadata

