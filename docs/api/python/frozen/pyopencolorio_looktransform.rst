..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: LookTransform
   :module: PyOpenColorIO


   .. py:method:: LookTransform.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. __init__(self: PyOpenColorIO.LookTransform) -> None

      2. __init__(self: PyOpenColorIO.LookTransform, src: str, dst: str, looks: str = '', skipColorSpaceConversion: bool = False, direction: PyOpenColorIO.TransformDirection = <TransformDirection.TRANSFORM_DIR_FORWARD: 0>) -> None


   .. py:method:: LookTransform.getDirection(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformDirection
      :module: PyOpenColorIO


   .. py:method:: LookTransform.getDst(self: PyOpenColorIO.LookTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: LookTransform.getLooks(self: PyOpenColorIO.LookTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: LookTransform.getSkipColorSpaceConversion(self: PyOpenColorIO.LookTransform) -> bool
      :module: PyOpenColorIO


   .. py:method:: LookTransform.getSrc(self: PyOpenColorIO.LookTransform) -> str
      :module: PyOpenColorIO


   .. py:method:: LookTransform.getTransformType(self: PyOpenColorIO.Transform) -> PyOpenColorIO.TransformType
      :module: PyOpenColorIO


   .. py:method:: LookTransform.setDirection(self: PyOpenColorIO.Transform, direction: PyOpenColorIO.TransformDirection) -> None
      :module: PyOpenColorIO

      Note that this only affects the evaluation and not the values stored in the object.


   .. py:method:: LookTransform.setDst(self: PyOpenColorIO.LookTransform, dst: str) -> None
      :module: PyOpenColorIO


   .. py:method:: LookTransform.setLooks(self: PyOpenColorIO.LookTransform, looks: str) -> None
      :module: PyOpenColorIO

      Specify looks to apply. Looks is a potentially comma (or colon) delimited list of look names, Where +/- prefixes are optionally allowed to denote forward/inverse look specification. (And forward is assumed in the absence of either)


   .. py:method:: LookTransform.setSkipColorSpaceConversion(self: PyOpenColorIO.LookTransform, skipColorSpaceConversion: bool) -> None
      :module: PyOpenColorIO


   .. py:method:: LookTransform.setSrc(self: PyOpenColorIO.LookTransform, src: str) -> None
      :module: PyOpenColorIO


   .. py:method:: LookTransform.validate(self: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Will throw if data is not valid.

