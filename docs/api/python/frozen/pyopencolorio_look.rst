..
  SPDX-License-Identifier: CC-BY-4.0
  Copyright Contributors to the OpenColorIO Project.
  Do not edit! This file was automatically generated by share/docs/frozendoc.py.

.. py:class:: Look
   :module: PyOpenColorIO

   The *:ref:`Look`* is an 'artistic' image modification, in a specified image state. The processSpace defines the :ref:`ColorSpace` the image is required to be in, for the math to apply correctly.


   .. py:method:: Look.__init__(*args, **kwargs)
      :module: PyOpenColorIO

      Overloaded function.

      1. __init__(self: PyOpenColorIO.Look) -> None

      2. __init__(self: PyOpenColorIO.Look, name: str = '', processSpace: str = '', transform: PyOpenColorIO.Transform = None, inverseTransform: PyOpenColorIO.Transform = None, description: str = '') -> None


   .. py:method:: Look.getDescription(self: PyOpenColorIO.Look) -> str
      :module: PyOpenColorIO


   .. py:method:: Look.getInverseTransform(self: PyOpenColorIO.Look) -> PyOpenColorIO.Transform
      :module: PyOpenColorIO


   .. py:method:: Look.getName(self: PyOpenColorIO.Look) -> str
      :module: PyOpenColorIO


   .. py:method:: Look.getProcessSpace(self: PyOpenColorIO.Look) -> str
      :module: PyOpenColorIO


   .. py:method:: Look.getTransform(self: PyOpenColorIO.Look) -> PyOpenColorIO.Transform
      :module: PyOpenColorIO


   .. py:method:: Look.setDescription(self: PyOpenColorIO.Look, description: str) -> None
      :module: PyOpenColorIO


   .. py:method:: Look.setInverseTransform(self: PyOpenColorIO.Look, transform: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Setting a transform to a non-null call makes it allowed.


   .. py:method:: Look.setName(self: PyOpenColorIO.Look, name: str) -> None
      :module: PyOpenColorIO


   .. py:method:: Look.setProcessSpace(self: PyOpenColorIO.Look, processSpace: str) -> None
      :module: PyOpenColorIO


   .. py:method:: Look.setTransform(self: PyOpenColorIO.Look, transform: PyOpenColorIO.Transform) -> None
      :module: PyOpenColorIO

      Setting a transform to a non-null call makes it allowed.

