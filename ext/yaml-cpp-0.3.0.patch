diff -Naur yaml-cpp.orig/CMakeLists.txt yaml-cpp/CMakeLists.txt
--- yaml-cpp.orig/CMakeLists.txt	2012-01-21 08:52:48.000000000 +0000
+++ yaml-cpp/CMakeLists.txt	2018-09-24 21:49:22.000000000 +0100
@@ -151,53 +151,6 @@
 
 # Microsoft VisualC++ specialities
 if(MSVC)
-	### General stuff
-	# a) Change MSVC runtime library settings (/MD[d], /MT[d], /ML[d] (single-threaded until VS 2003))
-	#    plus set lib suffix for later use and project label accordingly
-	# see http://msdn.microsoft.com/en-us/library/aa278396(v=VS.60).aspx
-	#     http://msdn.microsoft.com/en-us/library/2kzt1wy3(v=VS.71).aspx
-	set(LIB_RT_SUFFIX "md")	# CMake defaults to /MD for MSVC
-	set(LIB_RT_OPTION "/MD")
-	#
-	if(NOT MSVC_SHARED_RT)	# User wants to have static runtime libraries (/MT, /ML)
-		if(MSVC_STHREADED_RT)	# User wants to have old single-threaded static runtime libraries
-			set(LIB_RT_SUFFIX "ml")
-			set(LIB_RT_OPTION "/ML")
-			if(NOT ${MSVC_VERSION} LESS 1400)
-				message(FATAL_ERROR "Single-threaded static runtime libraries (/ML) only available until VS .NET 2003 (7.1).")
-			endif()
-		else()
-			set(LIB_RT_SUFFIX "mt")
-			set(LIB_RT_OPTION "/MT")
-		endif()
-
-		# correct linker options
-		foreach(flag_var  CMAKE_C_FLAGS  CMAKE_CXX_FLAGS)
-			foreach(config_name  ""  DEBUG  RELEASE  MINSIZEREL  RELWITHDEBINFO)
-				set(var_name "${flag_var}")
-				if(NOT "${config_name}" STREQUAL "")
-					set(var_name "${var_name}_${config_name}")
-				endif()
-				string(REPLACE "/MD" "${LIB_RT_OPTION}" ${var_name} "${${var_name}}")
-			endforeach()
-		endforeach()
-	endif()
-	#
-	set(LABEL_SUFFIX "${LABEL_SUFFIX} ${LIB_RT_SUFFIX}")
-
-	# b) Change prefix for static libraries
-	set(CMAKE_STATIC_LIBRARY_PREFIX "lib")	# to distinguish static libraries from DLL import libs
-
-	# c) Correct suffixes for static libraries
-	if(NOT BUILD_SHARED_LIBS)
-		### General stuff
-		set(LIB_TARGET_SUFFIX "${LIB_SUFFIX}${LIB_RT_SUFFIX}")
-	endif()
-
-	### Project stuff
-	# /W3 = set warning level; see http://msdn.microsoft.com/en-us/library/thxezb7y.aspx
-	# /wd4127 = disable warning C4127 "conditional expression is constant"; see http://msdn.microsoft.com/en-us/library/6t66728h.aspx
-	# /wd4355 = disable warning C4355 "'this' : used in base member initializer list"; http://msdn.microsoft.com/en-us/library/3c594ae3.aspx
 	set(CMAKE_CXX_FLAGS "/W3 /wd4127 /wd4355 /D_SCL_SECURE_NO_WARNINGS ${CMAKE_CXX_FLAGS}")
 endif()
 
@@ -205,21 +158,16 @@
 ###
 ### General install settings
 ###
-if(WIN32)
-	set(_library_dir bin)	# .dll are in PATH, like executables
-else()
-	set(_library_dir lib)
-endif()
 
 set(INCLUDE_INSTALL_ROOT_DIR include)
 
 set(INCLUDE_INSTALL_DIR ${INCLUDE_INSTALL_ROOT_DIR}/yaml-cpp)
-set(LIB_INSTALL_DIR "${_library_dir}${LIB_SUFFIX}")
+set(LIB_INSTALL_DIR "lib")
 
 set(_INSTALL_DESTINATIONS
 	RUNTIME DESTINATION bin
 	LIBRARY DESTINATION ${LIB_INSTALL_DIR}
-	ARCHIVE DESTINATION "lib${LIB_SUFFIX}"
+	ARCHIVE DESTINATION "lib"
 )
 
 
@@ -235,10 +183,18 @@
 	${contrib_private_headers}
 )
 
+if(UNIX)
+    set(YAML_COMPILE_FLAGS "${YAML_COMPILE_FLAGS} -fPIC -fvisibility=hidden")
+endif()
+if(OCIO_INLINES_HIDDEN AND UNIX)
+    set(YAML_COMPILE_FLAGS "${YAML_COMPILE_FLAGS} -fvisibility-inlines-hidden")
+endif()
+
 set_target_properties(yaml-cpp PROPERTIES
 	VERSION "${YAML_CPP_VERSION}"
 	SOVERSION "${YAML_CPP_VERSION_MAJOR}.${YAML_CPP_VERSION_MINOR}"
 	PROJECT_LABEL "yaml-cpp ${LABEL_SUFFIX}"
+	COMPILE_FLAGS "${YAML_COMPILE_FLAGS}"
 )
 
 if(IPHONE)
@@ -247,17 +203,6 @@
 	)
 endif()
 
-if(MSVC)
-	if(NOT BUILD_SHARED_LIBS)
-		# correct library names
-		set_target_properties(yaml-cpp PROPERTIES
-			DEBUG_POSTFIX "${LIB_TARGET_SUFFIX}d"
-			RELEASE_POSTFIX "${LIB_TARGET_SUFFIX}"
-			MINSIZEREL_POSTFIX "${LIB_TARGET_SUFFIX}"
-			RELWITHDEBINFO_POSTFIX "${LIB_TARGET_SUFFIX}"
-		)
-	endif()
-endif()
 
 install(TARGETS yaml-cpp ${_INSTALL_DESTINATIONS})
 install(
diff -Naur yaml-cpp.orig/include/yaml-cpp/binary.h yaml-cpp/include/yaml-cpp/binary.h
--- yaml-cpp.orig/include/yaml-cpp/binary.h	2012-01-21 08:52:48.000000000 +0000
+++ yaml-cpp/include/yaml-cpp/binary.h	2018-09-24 21:46:01.000000000 +0100
@@ -18,7 +18,7 @@
     class Binary {
     public:
         Binary(): m_unownedData(0), m_unownedSize(0) {}
-        Binary(const unsigned char *data, std::size_t size): m_unownedData(data), m_unownedSize(size) {}
+        Binary(const unsigned char *dataptr, std::size_t datasize): m_unownedData(dataptr), m_unownedSize(datasize) {}
         
         bool owned() const { return !m_unownedData; }
         std::size_t size() const { return owned() ? m_data.size() : m_unownedSize; }
diff -Naur yaml-cpp.orig/src/scanner.h yaml-cpp/src/scanner.h
--- yaml-cpp.orig/src/scanner.h	2012-01-21 08:52:48.000000000 +0000
+++ yaml-cpp/src/scanner.h	2018-09-24 21:46:01.000000000 +0100
@@ -57,7 +57,7 @@
 		
 		bool InFlowContext() const { return !m_flows.empty(); }
 		bool InBlockContext() const { return m_flows.empty(); }
-		int GetFlowLevel() const { return m_flows.size(); }
+		int GetFlowLevel() const { return int(m_flows.size()); }
 		
 		Token::TYPE GetStartTokenFor(IndentMarker::INDENT_TYPE type) const;
 		IndentMarker *PushIndentTo(int column, IndentMarker::INDENT_TYPE type);
