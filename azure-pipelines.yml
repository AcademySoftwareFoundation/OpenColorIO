# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

# TODO: Add gh-pages deployment on tag trigger

trigger:
  batch: true
  branches:
    include:
    - master
    - RB-*
    - ci_test

pr:
  autoCancel: true
  branches:
    include:
    - master
    - RB-*

jobs:

# ------------------------------------------------------------------------------
# Linux
# ------------------------------------------------------------------------------
# Note: 'agentImage' is the Microsoft-hosted agent. 'containerImage' is the
#       Docker container where the build occurs.
# Note: 'containerImage' images are hosted on DockerHub.

- job: Linux
  strategy:
    matrix:
      CentOS 7 VFX CY2019:
        agentImage: 'ubuntu-16.04'
        containerImage: aswfstaging/ci-ocio:2019
        useSSE: ON
        cxxCompiler: g++
        cCompiler: gcc
        installSh: ''
      CentOS 7 VFX CY2019 (No SSE):
        agentImage: 'ubuntu-16.04'
        containerImage: aswfstaging/ci-ocio:2019
        useSSE: OFF
        cxxCompiler: g++
        cCompiler: gcc
        installSh: ''
      CentOS 7 Clang 7:
        agentImage: 'ubuntu-16.04'
        containerImage: aswfstaging/ci-ocio:2019
        useSSE: ON
        cxxCompiler: clang++
        cCompiler: clang
        installSh: ''
      CentOS 7 Clang 7 (Latest):
        agentImage: 'ubuntu-16.04'
        containerImage: aswfstaging/ci-base:2019
        useSSE: ON
        cxxCompiler: clang++
        cCompiler: clang
        installSh: |
          share/ci/scripts/linux/install_openexr.sh latest
          share/ci/scripts/linux/install_oiio.sh latest
  pool:
    vmImage: $(agentImage)
  container: $[ variables['containerImage'] ]

  steps:
  - template: share/ci/templates/checkout.yml
  - bash: $(installSh)
    displayName: Install dependencies
    condition: and(succeeded(), variables['installSh'])

  - template: share/ci/templates/configure.yml
    parameters:
      useSSE: $(useSSE)
      cxxCompiler: $(cxxCompiler)
      cCompiler: $(cCompiler)

  - template: share/ci/templates/build.yml
    parameters:
      cxxCompiler: $(cxxCompiler)
      cCompiler: $(cCompiler)
      cmakeOpts: -- -j2

# --------------------------
# SonarCloud static analysis
# --------------------------
# TODO: Remove 'condition' after initial merge to enable PR static analysis

- job: SonarCloud
  displayName: Linux CentOS 7 VFX CY2019 (SonarCloud)
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')
  pool:
    vmImage: 'ubuntu-16.04'
  container: aswfstaging/ci-ocio:2019

  steps:
  - template: share/ci/templates/checkout.yml
  - template: share/ci/templates/configure.yml
    parameters:
      cxxFlags: -g -O0 -fprofile-arcs -ftest-coverage
      cmakeOpts: |
        -DCMAKE_EXE_LINKER_FLAGS="-lgcov" \
        -DCMAKE_CXX_OUTPUT_EXTENSION_REPLACE=ON

  - template: share/ci/templates/build_sonar.yml

# ------------------------------------------------------------------------------
# macOS
# ------------------------------------------------------------------------------
- job: macOS
  strategy:
    matrix:
      10.14 AppleClang 10.0:
        agentImage: 'macOS-10.14'
      10.13 AppleClang 10.0:
        agentImage: 'macOS-10.13'
  pool:
    vmImage: $(agentImage)
  
  steps:
  - template: share/ci/templates/checkout.yml
  - bash: |
      share/ci/scripts/macos/install.sh
      share/ci/scripts/macos/install_python.sh 2.7.16
    displayName: Install dependencies

  - template: share/ci/templates/configure.yml
    parameters:
      cmakeOpts: |
        -DPYTHON_INCLUDE_DIR=$(python-config --prefix)/include/python2.7 \
        -DPYTHON_LIBRARY=$(python-config --prefix)/lib/libpython2.7.dylib \
        -DPYTHON_EXECUTABLE=$(which python2)

  - template: share/ci/templates/build.yml
    parameters:
      cmakeOpts: -- -j2

# ------------------------------------------------------------------------------
# Windows
# ------------------------------------------------------------------------------
- job: Windows
  strategy:
    matrix:
      2016 MSVC 14.16:
        agentImage: 'vs2017-win2016'
        buildSharedLibs: ON
        buildDocs: ON
        installPython: false
      2016 MSVC 14.16 (Static):
        agentImage: 'vs2017-win2016'
        buildSharedLibs: OFF
        buildDocs: OFF
        installPython: false
      2012 MSVC 14.0:
        agentImage: 'vs2015-win2012r2'
        buildSharedLibs: ON
        buildDocs: ON
        installPython: true
  pool:
    vmImage: $(agentImage)

  steps:
  - template: share/ci/templates/checkout.yml
  - powershell: |
      share/ci/scripts/windows/install_cmake.ps1 3.11.0
    displayName: Install CMake

  - powershell: |
      share/ci/scripts/windows/install_python.ps1 2.7.16
    displayName: Install Python
    condition: and(succeeded(), eq(variables['installPython'], 'true'))

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      addToPath: true
      architecture: 'x64'
    displayName: Configure Python
    condition: and(succeeded(), eq(variables['installPython'], 'false'))

  - template: share/ci/templates/configure.yml
    parameters:
      buildSharedLibs: $(buildSharedLibs)
      buildDocs: $(buildDocs)
      verbose: ON
      cmakeOpts: |
        -DCMAKE_GENERATOR_PLATFORM=x64 \
        -DPYTHON_EXECUTABLE=$(which python)

  - template: share/ci/templates/build.yml
