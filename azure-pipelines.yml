# azure-pipelines build file
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

# TODO: Add gh-pages deployment on tag trigger

trigger:
  batch: true
  branches:
    include:
    - master
    - RB-*
    - ci_test

pr:
  autoCancel: true
  branches:
    include:
    - master
    - RB-*

# Common variables
variables:
  cxxStd: 14
  nixCxxFlags: -std=c++$(cxxStd) -fPIC

jobs:

# ------------------------------------------------------------------------------
# Linux
# ------------------------------------------------------------------------------
# TODO: Move Docker images to ASWF DockerHub account

- job: Linux
  strategy:
    matrix:
      Ubuntu 18.04 VFX CY2020:
        agentImage: 'ubuntu-16.04'
        containerImage: michdolan/ubuntu18.04:vfx2020_py27
        cxxFlags: ''
        cxxCompiler: g++
        cCompiler: gcc
      Ubuntu 18.04 VFX CY2019:
        agentImage: 'ubuntu-16.04'
        containerImage: michdolan/ubuntu18.04:vfx2019
        cxxFlags: ''
        cxxCompiler: g++
        cCompiler: gcc
      Ubuntu 18.04 Clang 6.0:
        agentImage: 'ubuntu-16.04'
        containerImage: michdolan/ubuntu18.04:vfx2019
        cxxFlags: -Wno-deprecated-register
        cxxCompiler: clang++
        cCompiler: clang
  pool:
    vmImage: $(agentImage)
  container: $[ variables['containerImage'] ]

  steps:
  - template: share/ci/templates/checkout.yml
  - template: share/ci/templates/configure.yml
    parameters:
      cxxFlags: $(nixCxxFlags) $(cxxFlags)
      cxxCompiler: $(cxxCompiler)
      cCompiler: $(cCompiler)

  - template: share/ci/templates/build.yml
    parameters:
      cxxCompiler: $(cxxCompiler)
      cCompiler: $(cCompiler)
      cmakeOpts: -- -j2

# --------------------------
# SonarCloud static analysis
# --------------------------
- job: SonarCloud
  displayName: SonarCloud Ubuntu 18.04 VFX CY2019
  condition: in(variables['Build.Reason'], 'Manual', 'Schedule')
  pool:
    vmImage: 'ubuntu-16.04'
  container: michdolan/ubuntu18.04:vfx2019

  steps:
  - template: share/ci/templates/checkout.yml
  - template: share/ci/templates/configure.yml
    parameters:
      cxxFlags: $(nixCxxFlags) -g -O0 -fprofile-arcs -ftest-coverage
      cmakeOpts: |
        -DCMAKE_EXE_LINKER_FLAGS="-lgcov" \
        -DCMAKE_CXX_OUTPUT_EXTENSION_REPLACE=ON

  - template: share/ci/templates/build_sonar.yml

# ------------------------------------------------------------------------------
# macOS
# ------------------------------------------------------------------------------
- job: macOS
  strategy:
    matrix:
      10.14 AppleClang 10.0:
        agentImage: 'macOS-10.14'
  pool:
    vmImage: $(agentImage)
  
  steps:
  - template: share/ci/templates/checkout.yml
  - bash: share/ci/scripts/install_macos.sh 2.7.16
    displayName: Install dependencies

  - template: share/ci/templates/configure.yml
    parameters:
      cxxFlags: $(nixCxxFlags) -Wno-deprecated-register
      cmakeOpts: |
        -DPYTHON_INCLUDE_DIR=$(python-config --prefix)/include/python2.7 \
        -DPYTHON_LIBRARY=$(python-config --prefix)/lib/libpython2.7.dylib \
        -DPYTHON_EXECUTABLE=$(which python2)

  - template: share/ci/templates/build.yml
    parameters:
      cmakeOpts: -- -j2

# ------------------------------------------------------------------------------
# Windows
# ------------------------------------------------------------------------------
- job: Windows
  strategy:
    matrix:
      2016 MSVC 14.16:
        agentImage: 'vs2017-win2016'
        buildSharedLibs: ON
        buildDocs: ON
      2016 MSVC 14.16 Static:
        agentImage: 'vs2017-win2016'
        buildSharedLibs: OFF
        buildDocs: OFF
  pool:
    vmImage: $(agentImage)

  steps:
  - task: UsePythonVersion@0
    # Note: This provides a static Python lib only
    inputs:
      versionSpec: '2.7'
    displayName: Configure Python

  - template: share/ci/templates/checkout.yml
  - template: share/ci/templates/configure.yml
    parameters:
      buildSharedLibs: $(buildSharedLibs)
      buildDocs: $(buildDocs)
      cxxFlags: /std:c++$(cxxStd) /EHsc /D WIN32 /D NDEBUG
      verbose: ON
      cmakeOpts: |
        -DCMAKE_GENERATOR_PLATFORM=x64 \
        -DPYTHON_EXECUTABLE=$(which python)

  - template: share/ci/templates/build.yml
